/*
 * $Id$
 *
 * File is automatically generated by the Xtext language generator.
 * Do not change it.
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2021 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.lang.web;

import com.google.inject.Injector;
import com.google.inject.Provider;

import io.sarl.lang.SARLStandaloneSetup;
import io.sarl.lang.compiler.batch.SarlBatchCompiler;

import java.io.File;
import java.io.IOException;
import java.util.stream.Collectors;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Deploy this class into a servlet container to enable DSL-specific services.
 */
@WebServlet(name = "WebServices", urlPatterns = "/compile/*")
public class WebpageServlet extends HttpServlet {
	
	private static final long serialVersionUID = 1L;
	
	private static final String directoryPath = "./files/" ;
	private static final String sourcePath = "sources" ;
	private static final String tempPath = "temp" ;
	private static final String outputPath = "src-gen" ;
	private static final String outputClassPath = "class-gen" ;
	
	String temp = directoryPath+outputClassPath;
	
	private static final File outputClassPathFile = new File(directoryPath+outputClassPath);
	
	@Override
	public void doPost(HttpServletRequest req, HttpServletResponse resp) 
			throws ServletException, IOException {
		System.out.println("TEST POST !");
		
		String requestData = req.getReader().lines().collect(Collectors.joining());

		System.out.println(requestData);
		
		Injector injector = SARLStandaloneSetup.doSetup();
		Provider<SarlBatchCompiler> batch = injector.getProvider(SarlBatchCompiler.class);
		SarlBatchCompiler provider = batch.get();
		
		
		provider.setSarlCompilationEnable(true);
		provider.setJavaPostCompilationEnable(true);
		
		provider.setSourcePath(directoryPath+sourcePath);
		provider.setTempDirectory(directoryPath+tempPath);
		provider.setOutputPath(directoryPath+outputPath);
		
		int index = provider.getOutputPath().toString().lastIndexOf('\\');
		String firstPart = provider.getOutputPath().toString().substring(0,index);
		provider.setClassOutputPath(new File(firstPart + "\\" + sourcePath));
		
		/* Print Success
		System.out.println("SourcePath: " + provider.getSourcePaths());
		System.out.println("TempPath: " + provider.getTempDirectory());
		System.out.println("OutputPath: " + provider.getOutputPath().toString());
		System.out.println("ClassOuputPath: " + provider.getClassOutputPath());
		*/
		
		boolean isSucess = provider.compile();
		
		System.out.println("Compilation sucess : " + isSucess);
	}
	
}
