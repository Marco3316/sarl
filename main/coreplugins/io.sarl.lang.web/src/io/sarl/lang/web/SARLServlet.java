/*
 * $Id$
 *
 * File is automatically generated by the Xtext language generator.
 * Do not change it.
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2021 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.lang.web;

import com.google.inject.Injector;
import com.google.inject.Provider;

import io.sarl.lang.SARLStandaloneSetup;
import io.sarl.lang.compiler.batch.SarlBatchCompiler;

import java.io.IOException;
import java.util.stream.Collectors;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.eclipse.xtext.util.DisposableRegistry;
import org.eclipse.xtext.web.server.XtextServiceDispatcher.ServiceDescriptor;
import org.eclipse.xtext.web.server.persistence.IResourceBaseProvider;
import org.eclipse.xtext.web.server.persistence.ResourceBaseProviderImpl;
import org.eclipse.xtext.web.servlet.XtextServlet;

/**
 * Deploy this class into a servlet container to enable DSL-specific services.
 */
@WebServlet(name = "XtextServices", urlPatterns = "/xtext-service/*")
public class SARLServlet extends XtextServlet {

	private static final long serialVersionUID = 1L;

	DisposableRegistry disposableRegistry;

	
//	@Override
//	public void doGet(HttpServletRequest req, HttpServletResponse resp) 
//			throws ServletException, IOException {
//		System.out.println("TEST GET !");
//		
//		String requestData = req.getReader().lines().collect(Collectors.joining());
//
//		System.out.println(requestData);
//		
//	}
	
//	@Override
//	public void doPost(HttpServletRequest req, HttpServletResponse resp) 
//			throws ServletException, IOException {
//		System.out.println("TEST POST !");
//		
//		String requestData = req.getReader().lines().collect(Collectors.joining());
//		
//
//		System.out.println(requestData);
//		
//		Injector injector = SARLStandaloneSetup.doSetup();
//		Provider<SarlBatchCompiler> batch = injector.getProvider(SarlBatchCompiler.class);
//		batch.get();
//	}
//	


	public void init() throws ServletException {
		super.init();
		IResourceBaseProvider resourceBaseProvider = new ResourceBaseProviderImpl("./files");
		Injector injector = new SARLWebSetup(resourceBaseProvider).createInjectorAndDoEMFRegistration();
		this.disposableRegistry = injector.getInstance(DisposableRegistry.class);
	}

	public void destroy() {
		if (disposableRegistry != null) {
			disposableRegistry.dispose();
			disposableRegistry = null;
		}
		super.destroy();
	}

}
