/*
 * $Id$
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2021 the original authors or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.sarl.docs.doclet.j11.config;

import java.util.List;

import javax.inject.Inject;
import javax.lang.model.element.Element;

import com.sun.source.doctree.DocCommentTree;
import com.sun.source.doctree.DocTree;
import com.sun.source.doctree.InlineTagTree;
import jdk.javadoc.internal.doclets.formats.html.HtmlConfiguration;

import io.sarl.lang.annotation.SyntheticMember;
import io.sarl.lang.util.SarlUtils;

/** Check if an element should be ignored into the API doc.
 * 
 * <p>The ignored elements are:<ul>
 * <li>elements with an "hidden" name (usually with the {@code $} character)</li>
 * <li>elements tagged with {@code @SyntheticMember} that are usually generated by the SARL compiler</li>
 * <li>elements manually tagged with {@code @ExcludeFromApiDoc}</li>
 * </ul>
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 * @since 0.11
 */
public class DefaultApidocExcluder implements ApidocExcluder {

	/** Tag that could be used for excluding an element from the API documentation.
	 */
	public static final String EXCLUDE_FROM_JAVADOC_TAG = "ExcludeFromApidoc"; //$NON-NLS-1$
	
	private final HtmlConfiguration configuration;

	/** Constructor.
	 *
	 * @param configuration the configuration.
	 * @param keywords the accessors to the SARL keywords.
	 */
	@Inject
	public DefaultApidocExcluder(HtmlConfiguration configuration) {
		this.configuration = configuration;
	}
	
	@Override
	public boolean isExcluded(Element element) {
		if (SarlUtils.isHiddenMember(element.getSimpleName().toString())) {
			return true;
		}
		if (element.getAnnotation(SyntheticMember.class) != null) {
			return true;
		}
		final DocCommentTree comment = this.configuration.utils.docTrees.getDocCommentTree(element);
		final List<? extends DocTree> nodes = this.configuration.utils.getCommentHelper(element).getTags(this.configuration, comment);
		if (nodes != null) {
			for (final DocTree node : nodes) {
				if (node instanceof InlineTagTree) {
					final InlineTagTree tag = (InlineTagTree) node;
					if (EXCLUDE_FROM_JAVADOC_TAG.equalsIgnoreCase(tag.getTagName())) {
						return true;
					}
				}
			}
		}
		// nothing above found a reason to exclude
		return false;
	}

	@Override
	public boolean isTranslatableToTag(Element element) {
		if (element.getAnnotation(SyntheticMember.class) != null) {
			return true;
		}
		return false;
	}

}
